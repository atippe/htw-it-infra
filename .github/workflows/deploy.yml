name: Deploy EC2 Instance

on:
  workflow_run:
    workflows: [ "Build and Push to ECR" ]
    types:
      - completed
    branches: [ main ]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  STACK_NAME: ec2-docker-stack

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy CloudFormation stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: ${{ env.STACK_NAME }}
          template: cloudformation/ec2-docker.yml
          parameter-overrides: >-
            KeyName=${{ secrets.EC2_KEY_PAIR }},
            ECRImageURI=${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }},
            DBUsername=${{ secrets.DB_USERNAME }},
            DBPassword=${{ secrets.DB_PASSWORD }}
          capabilities: CAPABILITY_IAM
          no-fail-on-empty-changeset: "1"
          disable-rollback: true

      - name: Debug if failed
        if: ${{ failure() }}
        run: |
          echo "Checking CloudFormation events..."
          aws cloudformation describe-stack-events \
            --stack-name ${{ env.STACK_NAME }} \
            --query 'StackEvents[?ResourceStatus==`CREATE_FAILED`].[LogicalResourceId,ResourceStatusReason]' \
            --output table

      - name: Get CloudFormation outputs
        run: |
          OUTPUTS=$(aws cloudformation describe-stacks --stack-name ${{ env.STACK_NAME }} --query 'Stacks[0].Outputs' --output json)
          echo "Stack Outputs:"
          echo "$OUTPUTS" | jq '.'
